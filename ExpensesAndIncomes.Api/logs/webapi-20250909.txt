2025-09-09 10:57:29.419 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 10:57:29.443 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-09 10:57:29.454 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-09 10:57:29.488 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-09 10:57:29.493 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 10:57:29.494 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-09 10:57:29.502 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-09 10:57:29.506 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-09 10:57:29.512 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-09 10:57:29.520 +03:00 [INF] Check if there are types of expenses
2025-09-09 10:57:29.623 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfExpenses] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 10:57:29.629 +03:00 [INF] Types exist
2025-09-09 10:57:29.630 +03:00 [INF] Check if there are types of incomes
2025-09-09 10:57:29.634 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfIncomes] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 10:57:29.684 +03:00 [INF] Now listening on: http://localhost:5119
2025-09-09 10:57:29.684 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-09 10:57:29.685 +03:00 [INF] Hosting environment: Development
2025-09-09 10:57:29.685 +03:00 [INF] Content root path: C:\Users\petrl\OneDrive\Рабочий стол\Обучение коду\ExpensesAndIncome\ExpensesAndIncomes.Api
2025-09-09 10:59:24.410 +03:00 [INF] Application is shutting down...
2025-09-09 10:59:48.077 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 10:59:48.100 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-09 10:59:48.476 +03:00 [INF] Executed DbCommand (373ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-09 10:59:48.514 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-09 10:59:48.520 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 10:59:48.522 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-09 10:59:48.538 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-09 10:59:48.542 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-09 10:59:48.544 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-09 10:59:48.553 +03:00 [INF] Check if there are types of expenses
2025-09-09 10:59:48.653 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfExpenses] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 10:59:48.659 +03:00 [INF] Types exist
2025-09-09 10:59:48.660 +03:00 [INF] Check if there are types of incomes
2025-09-09 10:59:48.665 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfIncomes] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 10:59:48.716 +03:00 [INF] Now listening on: http://localhost:5119
2025-09-09 10:59:48.717 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-09 10:59:48.717 +03:00 [INF] Hosting environment: Development
2025-09-09 10:59:48.718 +03:00 [INF] Content root path: C:\Users\petrl\OneDrive\Рабочий стол\Обучение коду\ExpensesAndIncome\ExpensesAndIncomes.Api
2025-09-09 11:01:00.366 +03:00 [INF] Application is shutting down...
2025-09-09 11:04:24.519 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:04:24.541 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-09 11:04:24.551 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-09 11:04:24.581 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-09 11:04:24.585 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:04:24.586 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-09 11:04:24.595 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-09 11:04:24.600 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-09 11:04:24.601 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-09 11:04:24.609 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:04:24.711 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfExpenses] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:04:24.716 +03:00 [INF] Types exist
2025-09-09 11:04:24.717 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:04:24.722 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfIncomes] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:04:24.770 +03:00 [INF] Now listening on: http://localhost:5119
2025-09-09 11:04:24.771 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-09 11:04:24.772 +03:00 [INF] Hosting environment: Development
2025-09-09 11:04:24.772 +03:00 [INF] Content root path: C:\Users\petrl\OneDrive\Рабочий стол\Обучение коду\ExpensesAndIncome\ExpensesAndIncomes.Api
2025-09-09 11:04:50.018 +03:00 [INF] Application is shutting down...
2025-09-09 11:05:07.853 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:05:07.878 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-09 11:05:07.887 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-09 11:05:07.918 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-09 11:05:07.926 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:05:07.928 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-09 11:05:07.935 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-09 11:05:07.939 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-09 11:05:07.940 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-09 11:05:07.945 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:05:08.048 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfExpenses] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:05:08.053 +03:00 [INF] Types exist
2025-09-09 11:05:08.054 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:05:08.059 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfIncomes] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:05:08.107 +03:00 [INF] Now listening on: http://localhost:5119
2025-09-09 11:05:08.108 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-09 11:05:08.108 +03:00 [INF] Hosting environment: Development
2025-09-09 11:05:08.108 +03:00 [INF] Content root path: C:\Users\petrl\OneDrive\Рабочий стол\Обучение коду\ExpensesAndIncome\ExpensesAndIncomes.Api
2025-09-09 11:06:36.704 +03:00 [INF] Application is shutting down...
2025-09-09 11:06:56.175 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:06:56.199 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-09 11:06:56.209 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-09 11:06:56.244 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-09 11:06:56.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-09 11:06:56.265 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-09 11:06:56.275 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-09 11:06:56.280 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-09-09 11:06:56.281 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-09 11:06:56.286 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:06:56.393 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfExpenses] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:06:56.399 +03:00 [INF] Types exist
2025-09-09 11:06:56.400 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:06:56.404 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TypesOfIncomes] AS [t]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-09 11:06:56.453 +03:00 [INF] Now listening on: http://localhost:5119
2025-09-09 11:06:56.453 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-09 11:06:56.454 +03:00 [INF] Hosting environment: Development
2025-09-09 11:06:56.454 +03:00 [INF] Content root path: C:\Users\petrl\OneDrive\Рабочий стол\Обучение коду\ExpensesAndIncome\ExpensesAndIncomes.Api
2025-09-09 11:17:33.396 +03:00 [INF] Application is shutting down...
2025-09-09 11:17:40.109 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:17:40.229 +03:00 [INF] Types exist
2025-09-09 11:17:40.230 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:18:53.365 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:18:53.486 +03:00 [INF] Types exist
2025-09-09 11:18:53.488 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:21:48.540 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:21:48.664 +03:00 [INF] Types exist
2025-09-09 11:21:48.665 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:36:07.982 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:36:08.110 +03:00 [INF] Types exist
2025-09-09 11:36:08.112 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:36:16.613 +03:00 [INF] Incoming request: GET /swagger/index.html
2025-09-09 11:36:16.710 +03:00 [INF] Response: 200 processed
2025-09-09 11:36:16.728 +03:00 [INF] Incoming request: GET /swagger/index.js
2025-09-09 11:36:16.729 +03:00 [INF] Response: 200 processed
2025-09-09 11:36:16.818 +03:00 [INF] Incoming request: GET /swagger/v1/swagger.json
2025-09-09 11:36:16.903 +03:00 [INF] Response: 200 processed
2025-09-09 11:37:06.963 +03:00 [INF] Incoming request: GET /Expenses/AllExpenses
2025-09-09 11:37:06.983 +03:00 [INF] Executing a query to list all expenses
2025-09-09 11:37:07.100 +03:00 [INF] Response: 200 processed
2025-09-09 11:37:56.025 +03:00 [INF] Incoming request: GET /ExpensesTypes/Food
2025-09-09 11:37:56.043 +03:00 [INF] Executing a query to get Food type of expenses
2025-09-09 11:37:56.106 +03:00 [INF] Response: 200 processed
2025-09-09 11:47:24.709 +03:00 [INF] Check if there are types of expenses
2025-09-09 11:47:24.829 +03:00 [INF] Types exist
2025-09-09 11:47:24.830 +03:00 [INF] Check if there are types of incomes
2025-09-09 11:47:24.834 +03:00 [INF] Types exist
2025-09-09 11:47:34.650 +03:00 [INF] Incoming request: GET /swagger/index.html
2025-09-09 11:47:34.726 +03:00 [INF] Response: 200 processed
2025-09-09 11:47:34.752 +03:00 [INF] Incoming request: GET /swagger/index.js
2025-09-09 11:47:34.754 +03:00 [INF] Response: 200 processed
2025-09-09 11:47:34.802 +03:00 [INF] Incoming request: GET /swagger/v1/swagger.json
2025-09-09 11:47:34.882 +03:00 [INF] Response: 200 processed
2025-09-09 11:47:52.947 +03:00 [INF] Incoming request: GET /Expenses/AllExpenses
2025-09-09 11:47:52.964 +03:00 [INF] Executing a query to list all expenses
2025-09-09 11:47:53.204 +03:00 [INF] Response: 200 processed
